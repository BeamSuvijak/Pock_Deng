import socket
import pygame
import itertools
import random
import time
import threading



card_pic = [['Cards/A_Clover.png', 'Cards/A_Diamond.png', 'Cards/A_Heart.png', 'Cards/A_Spade.png'],
            ['Cards/2_Clover.png', 'Cards/2_Diamond.png', 'Cards/2_Heart.png', 'Cards/2_Spade.png'],
            ['Cards/3_Clover.png', 'Cards/3_Diamond.png', 'Cards/3_Heart.png', 'Cards/3_Spade.png'],
            ['Cards/4_Clover.png', 'Cards/4_Diamond.png', 'Cards/4_Heart.png', 'Cards/4_Spade.png'],
            ['Cards/5_Clover.png', 'Cards/5_Diamond.png', 'Cards/5_Heart.png', 'Cards/5_Spade.png'],
            ['Cards/6_Clover.png', 'Cards/6_Diamond.png', 'Cards/6_Heart.png', 'Cards/6_Spade.png'],
            ['Cards/7_Clover.png', 'Cards/7_Diamond.png', 'Cards/7_Heart.png', 'Cards/7_Spade.png'],
            ['Cards/8_Clover.png', 'Cards/8_Diamond.png', 'Cards/8_Heart.png', 'Cards/8_Spade.png'],
            ['Cards/9_Clover.png', 'Cards/9_Diamond.png', 'Cards/9_Heart.png', 'Cards/9_Spade.png'],
            ['Cards/10_Clover.png', 'Cards/10_Diamond.png', 'Cards/10_Heart.png', 'Cards/10_Spade.png'],
            ['Cards/J_Clover.png', 'Cards/J_Diamond.png', 'Cards/J_Heart.png', 'Cards/J_Spade.png'],
            ['Cards/Q_Clover.png', 'Cards/Q_Diamond.png', 'Cards/Q_Heart.png', 'Cards/Q_Spade.png'],
            ['Cards/K_Clover.png', 'Cards/K_Diamond.png', 'Cards/K_Heart.png', 'Cards/K_Spade.png']]

scr_width = 1600
scr_height = 900


deck = list(itertools.product(range(0, 13), [0, 1, 2, 3]))
random.shuffle(deck)


HOST = socket.gethostbyname(socket.gethostname())  # the server's hostname or IP address
PORT = 12345  # the port used by the server





my_deck = []
enemy_deck = []

enemy_show = False
onetime = True


# create a socket object
with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.bind((HOST, PORT))
    s.listen()
    print('Server listening on', (HOST, PORT))
    conn, addr = s.accept()
    with conn:
        print('Connected by', addr)
        time.sleep(3)
        pygame.init()

        screen = pygame.display.set_mode((scr_width, scr_height))

        # Title and Icon
        pygame.display.set_caption("Some cute image")
        icon = pygame.image.load('app9.jpg')
        pygame.display.set_icon(icon)





        def send(msg):
            conn.sendall(msg.encode())

        def back_card(num,show):
            long = (38 * (num - 1) + 225)
            pos = (scr_width / 2) + (long / 2) -200
            high = -100
            for i in range(num):
                if show:
                    card_img = pygame.image.load(card_pic[enemy_deck[i][0]][enemy_deck[i][1]])
                else:
                    card_img = pygame.image.load('Cards/Back.png')
                screen.blit(card_img, (pos, high))
                pos -= 38


        def card(num):
            long = (38 * (num - 1) + 225)
            pos = (scr_width / 2) - (long / 2)
            high = 700
            for i in range(num):
                card_img = pygame.image.load(card_pic[my_deck[i][0]][my_deck[i][1]])
                screen.blit(card_img, (pos, high))
                pos += 38


        def re():
            global enemy_show
            data = conn.recv(1024)
            msg = data.decode()
            if msg == "MM":
                time.sleep(0.2)
                send("YOUR CARD")
                time.sleep(0.2)
                send(str(deck[0][0]))
                time.sleep(0.2)
                send(str(deck[0][1]))
                enemy_deck.append((deck[0][0],deck[0][1]))
                time.sleep(0.2)
                send("-1")
                deck.pop(0)
            if msg == "SHOW":
                enemy_show = True


        for i in range(2):
            my_deck.append((deck[i * 2][0], deck[i * 2][1]))
            enemy_deck.append((deck[i * 2 + 1][0], deck[i * 2 + 1][1]))
            send(str(deck[i * 2 + 1][0]))
            time.sleep(0.2)
            send(str(deck[i * 2 + 1][1]))
            time.sleep(0.2)

        for i in range(4):
            deck.pop(0)
        send("-1")

        for i in range(2):
            send(str(my_deck[i][0]))
            time.sleep(0.2)
            send(str(my_deck[i][1]))
            time.sleep(0.2)
        send("-1")


        running = True
        while running:
            screen.fill((0,99,0))
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    running = False

                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_m and onetime:
                        my_deck.append((deck[0][0],deck[0][1]))
                        send("MY CARD")
                        time.sleep(0.2)
                        send(str(deck[0][0]))
                        time.sleep(0.2)
                        send(str(deck[0][1]))
                        time.sleep(0.2)
                        send("-1")
                        deck.pop(0)
                        onetime = False
                    if event.key == pygame.K_p and onetime:
                        send("TEST")
                        onetime = False

                    if event.key == pygame.K_w:
                        send("SHOW")
                        onetime = False

            Thread = threading.Thread(target=re)
            Thread.start()
            back_card(len(enemy_deck),enemy_show)
            card(len(my_deck))
            pygame.display.update()

